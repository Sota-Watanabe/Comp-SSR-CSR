{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sota/\\u7814\\u7A76/\\u30C6\\u30B9\\u30C8\\u5B9F\\u88C5/batman/next.ssr/pages/shows/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\n\nvar Post = function Post(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, props.show.name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.show.summary.replace(/<[/]?[pb]>/g, \"\")), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 25\n    }\n  }) : null);\n};\n\n_c = Post;\nexport function getClientSideProps(_x) {\n  return _getClientSideProps.apply(this, arguments);\n}\n\nfunction _getClientSideProps() {\n  _getClientSideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(\"This is Post.getInitialProps\"); // console.log(`Fetched show: ${show.name}`);\n\n            return _context.abrupt(\"return\", {\n              props: {\n                show: show\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getClientSideProps.apply(this, arguments);\n}\n\n;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/sota/研究/テスト実装/batman/next.ssr/pages/shows/[id].js"],"names":["fetch","Post","props","show","name","summary","replace","image","medium","getClientSideProps","context","id","query","res","json","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFF,EAGGJ,KAAK,CAACC,IAAN,CAAWI,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAH9D,CADgB;AAAA,CAAlB;;KAAMP,I;AAQN,gBAAsBQ,kBAAtB;AAAA;AAAA;;;iFAAO,iBAAkCC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,YAAAA,EADH,GACUD,OAAO,CAACE,KADlB,CACGD,EADH;AAAA;AAAA,mBAEaX,KAAK,wCAAiCW,EAAjC,EAFlB;;AAAA;AAECE,YAAAA,GAFD;AAAA;AAAA,mBAGcA,GAAG,CAACC,IAAJ,EAHd;;AAAA;AAGCX,YAAAA,IAHD;AAILY,YAAAA,OAAO,CAACC,GAAR,iCAJK,CAKL;;AALK,6CAME;AAAEd,cAAAA,KAAK,EAAE;AAACC,gBAAAA,IAAI,EAAJA;AAAD;AAAT,aANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAON;AAED,eAAeF,IAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst Post = props => (\n  <div>\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, \"\")}</p>\n    {props.show.image ? <img src={props.show.image.medium} /> : null}\n  </div>\n);\n\nexport async function getClientSideProps(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`This is Post.getInitialProps`);\n  // console.log(`Fetched show: ${show.name}`);\n  return { props: {show} };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}